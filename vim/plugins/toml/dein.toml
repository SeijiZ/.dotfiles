[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_if = 1
on_event = 'TextYankPost'
on_source = ['unite.vim', 'denite.nvim']

[[plugins]]
repo = 'Shougo/unite.vim'
# on_if = 1
depends = 'neomru.vim'
hook_add = '''
	source ~/.dotfiles/vim/plugins/config/unite_config.vim
'''

[[plugins]]
repo = 'Shougo/vimfiler.vim'
hook_add = '''
	source ~/.dotfiles/vim/plugins/config/vimfiler_config.vim
'''

[[plugins]]
repo = 'Shougo/unite-outline'
hook_add = '''
	nnoremap <silent> [Plug]o :<C-u>Unite -vertical -direction=botright -no-quit -winwidth=40 outline<CR> 
'''

[[plugins]]
repo = 'Shougo/junkfile.vim'
hook_add = '''
let g:junkfile#directory = '$HOME/.local/share/nvim/junk'
nnoremap <silent> [Plug]j :<C-u>Unite junkfile/new junkfile<CR>
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'
hook_post_update = '''
	if dein#util#_is_windows()
		let cmd = 'tools\\update-dll-mingw'
	elseif dein#util#_is_cygwin()
		let cmd = make -f make_cygwin.mak'
	elseif executable('gmake')
		let cmd = 'gmake'
	else
		let cmd = 'make'
	endif
	let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'vim-scripts/gtags.vim'

[[plugins]]
repo = 'whatyouhide/vim-gotham'

[[plugins]]
repo = 'mattn/emmet-vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
	source ~/.dotfiles/vim/plugins/config/fugitive_config.vim
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
source ~/.dotfiles/vim/plugins/config/ale_config.vim
'''

[[plugins]]
repo = 'elzr/vim-json'
hook_add = '''
	let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
	nnoremap <silent> [Plug]w :WinResizerStartResize<CR> 
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
	"Start interactive EasyAlign in visual mode (e.g. vipga)
	vmap <Enter> <Plug>(EasyAlign)
	xmap ga <Plug>(EasyAlign)
	"Start interactive EasyAlign for a motion/text object (e.g. gaip)
	nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'plasticboy/vim-markdown'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
nmap [Meta]/ <Plug>(caw:hatpos:toggle)
vmap [Meta]/ <Plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
	source ~/.dotfiles/vim/plugins/config/quickrun_config.vim
'''

[[plugins]]
repo = 'osyo-manga/unite-filetype'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'

[[plugins]]
repo = 'vim-airline/vim-airline'
# hook_add = '''
#   let g:airline_left_sep='>'
#   let g:airline_right_sep='<'
#   let g:airline_detect_modified=1
# '''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
	source ~/.dotfiles/vim/plugins/config/denite_config.vim
'''

[[plugins]]
repo = 'nixprime/cpsm'
build = 'env PY3=ON ./install.sh'

[[plugins]]
repo = 'dag/vim-fish'
hook_add = '''
" Set up :make to use fish for syntax checking.
autocmd FileType *.fish compiler fish

" Set this to have long lines wrap inside comments.
autocmd FileType *.fish setlocal textwidth=79

" Enable folding of block structures in fish.
autocmd FileType *.fish setlocal foldmethod=expr
'''

########################################
# javascript
[[plugin]]
repo = 'othree/yajs.vim'
on_ft = ['javascript','html','php']

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']
hook_add = '''
let g:jsx_ext_required = 0
'''

[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'
on_ft = ['javascript']

# [[plugins]]
# repo = 'moll_vim-node'
# on_ft = ['javascript']

[[plugins]]
repo = 'myhere/vim-nodejs-complete'
on_ft = ['javascript']
hook_add = '''
setl omnifunc=jscomplete
let g:usejscomplete = 1
'''
